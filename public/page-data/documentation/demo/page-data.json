{"componentChunkName":"component---node-modules-riverscapes-gatsby-theme-src-templates-page-template-tsx-content-file-path-content-page-documentation-demo-mdx","path":"/documentation/demo/","result":{"data":{"site":{"siteMetadata":{"title":"Riverscapes Developer Website"}},"mdx":{"id":"1d6a3015-5cbf-504f-afce-9ae95f7c3e83","excerpt":"Baked-in Components Some components you can use without importing anything. This list will be updated as the theme grows.\n\nCustom Homepage Components:\n\nTheseâ€¦","body":"\nimport FaceIcon from '@mui/icons-material/Face';\n\n\n# Gatsby special markdown syntaxs\n\n## Baked-in Components\n\nSome components you can use without importing anything. This list will be updated as the theme grows.\n\n### Custom Homepage Components:\n\nThese components were designed specifically for the Riverscapes homepage site and may not be that useful for derivative sites.\n\n  * `<HomepageCard />`\n  * `<HomepageCardContent />`\n  * `<HomepageCardHighlight />`\n  * `<HomepageCardStat />`\n  * `<Hero />`\n\n### Custom Components for buttons and links:\n\n  * `<Button />` This is `MuiButton` wrapped around the Gatsby Link component for navigation. See examples below.\n  * `<Link />` This is Mui's `Link` component wrapped around Gatsby's Link component. See examples below.\n  * `<Youtube />` This is a helper since we use a lot of youtube videos. See examples below.\n  * `<StaticImage />` This is a helper since we use a lot of images. See examples below.\n\n### Material UI Components exposed by default:\n\nThere are a few MUI components we expose by default that are relatively safe to use:\n\n  * `<Box />` This is [Mui's `Box` component](https://mui.com/material-ui/react-box/). Use it instead of `<div />`\n  * `<Stack />` This is [Mui's `Stack` component](https://mui.com/material-ui/react-stack/). Use it to space things evenly across the screen.\n  * `<Grid />` This is [Mui's `Grid` component](https://mui.com/material-ui/react-grid/). This is for more complex layouts and should be used carefully as it may not be mobile-compatible.\n  * `<Alert />` This is [Mui's `Alert` component](https://mui.com/material-ui/react-alert/). Use it to draw attention or anounce something.\n  * *That's all for now. We may add to this list as needed...*\n\nSee the Advanced section below for more information on how to use MUI components.\n\nUsing homepage elements on non-homepage pages may cause strange things to happen so use it carefully.\n\nAs we continue to use and grow our sites we will likely add to this list.\n\n----------------\n\n## Import other MUI Components *(sparingly)*\n\nThis site is built on the [Material UI](https://mui.com/) framework. For special cases we may need to use components that are not exposed by default. In order to do that we need to import them from the `@mui/material` package.\n\n#### This should be done sparingly for a number of very good reasons:\n\n1. Our markdown already translates to these components in many cases. Keeping the site as close to pure Markdown as possible keeps the site aligned to the styleguide. When you go rogue with components you can easily deviate from the styleguide.\n1. **Maintainability**: The more components we use the more difficult it is to maintain the site. If MUI puts out a new patch that we decide to upgrade to the pure markdown components will not require ANY changes but the custom MUI components will all need to be re-tested across all our sites.\n1. **Context**: Not all MUI components are designed to work inside the main content of the page.\n2. **Responsiveness**: Not all components are responsive by default. Make sure you preview any changes on a phone or tablet before you commit them.\n3. **Modularity**: If you find yourself using the same pattern on multiple pages or multiple sites we should create a new `Baked-in` component for it. This will guarantee consistency across all our sites and make it easier to maintain.\n\nAll of that said, if you absolutely need to use MUI components other than the ones that are baked in you must import them:\n\n```typescript\nimport { Container, Divider, Grid, Card, CardActionArea, CardMedia, CardContent, Typography } from '@mui/material'\n\n<Divider />\n```\n\n----------------\n\n## Use MUI Icons\n\nOur theme has access to the [Material UI Icons](https://mui.com/components/material-icons/) library. You can use them in markdown like this:\n\n```typescript\nimport FaceIcon from '@mui/icons-material/Face';\n<FaceIcon />\n<Button to='../about-us' color='error' endIcon={<FaceIcon />}>About us Button</Button>\n```\n\n<FaceIcon />\n<Button to='../about-us' color='error' endIcon={<FaceIcon />}>About us Button</Button>\n\n\n----------------\n\n## **Don't** Use HTML tags\n\nWhile HTML tags like are technically allowed in markdown we recommend that you do not use them at all. \n\n#### Alternatives in descending desirability:\n\n1. Use the markdown equivalent whenever you can. This increases the maintainability of the site and reduces breakages during upgrade.\n2. Find a baked-in component that does what you want. (That's why we created them).\n3. Create a new baked-in component (or have a developer make one for you). This will mean you can use this new function across ALL sites with this theme.\n4. If there is absolutely no other way to do it then it might be best to check with a developer before proceeding.\n\n----------------\n\n## Links\n\nYou can easily use remark syntax for links\n\n### Internal Links\n\n### Relative Internal Links\n\nYou can either use the markdown syntax or the `<Link />` component\n\n* [About us Link](../about-us) `[About us Link](../about-us)`\n* <Link to='../about-us'>About us Link</Link> `<Link to='../about-us'>About us Link</Link>`\n\n**NOTE: Don't use the `<a>` tag. It will not render properly:**\n  * <a href='../about-us'>About us Link</a> `<a href='./about-us'>About us Link</a>`\n\n### Absolute Internal Links\n\nYou can either use the markdown syntax or the `<Link />` component\n\n* [About us Link](/about-us) `[About us Link](/about-us)`\n* <Link to='/about-us'>About us Link</Link> `<Link to='/about-us'>About us Link</Link>`\n\n**NOTE: Once again don't use the `<a>` tag. It will not render or link properly.**\n\n### External Links\n\nExternal links operate the same way. Linking internally will navigate using the current browser tab and external links will open a new tab.\n\n* [Google](https://google.com) `[Google](https://google.com)`\n* <Link to='https://google.com'>Google</Link> `<Link to='https://google.com'>Google</Link>`\n\n**NOTE: Again, don't use the `<a>` tag. It will not render properly.**\n\n----------------\n\n## Buttons\n\nButtons are almost identical to links. Linking internally will navigate using the current browser tab and external links will open a new tab.\n\n### Internal Links Button\n\n\n```jsx\n<Button to='../about-us'>About us Button</Button> \n<Button to='../about-us' color='secondary'>About us Button</Button> \n<Button to='../about-us' color='success'>About us Button</Button> \n<Button to='../about-us' color='error'>About us Button</Button> \n<Button to='../about-us' color='error' startIcon={<FaceIcon />}>About us Button</Button> \n<Button to='../about-us' color='error' endIcon={<FaceIcon />}>About us Button</Button> \n```\n<Button to='../about-us'>About us Button</Button> \n<Button to='../about-us' color='secondary'>About us Button</Button> \n<Button to='../about-us' color='success'>About us Button</Button> \n<Button to='../about-us' color='error'>About us Button</Button> \n<Button to='../about-us' color='error' startIcon={<FaceIcon />}>About us Button</Button> \n<Button to='../about-us' color='error' endIcon={<FaceIcon />}>About us Button</Button> \n\n### External Link Button\n\n```jsx\n<Button to='https://google.com'>Google dot com</Button>\n```\n<Button to='https://google.com'>Google dot com</Button> \n\n----------------\n\n# Images\n\nInternal images can come from several different places\n\n***Note: Do not use `<StaticImage />` for markdown images. It will not work.***\n\n\n## 1. In the `static` folder (Prefered Method)\n\nWhen you put images in the `/static` folder at the root of your site and reference them from there. **You must use an absolute path for that**.\n\n#### Markdown/Remark syntax\n\nQuick and dirty. **Whenever possible please do images like this**. they are not very configurable but they are guaranteed responsive on mobile and easy to maintain.\n\n```\n![DemoStatic](/images/demoStatic.jpg)\n```\n![DemoStatic](/images/demoStatic.jpg)\n\n#### RSStaticImage (instead of `<img />`)\n\nIf you need a bit more control you can use the `<RSStaticImage />` HTML syntax. You can use it the same as an `<img />` tag with all the same attributes.\n```typescript\n<RSStaticImage src='/images/demoStatic.jpg' style={{opacity: 0.2, border: \"20px solid orange\"}} />\n```\n<RSStaticImage src='/images/demoStatic.jpg' style={{opacity: 0.2, border: \"20px solid orange\"}} />\n\n\n- **Linked images**: Additionally you can include an `to` attribute to make the image a link. The properties of the `to` attribute are identical to the `<Link />` compoent above (i.e. You can use relative or absolute paths.)\n- **Image Captions**: You can also include a `caption` attribute to add a caption to the image. This is useful for images that are not self-explanatory.\n\n```typescript\n<RSStaticImage src='/images/demoStatic.jpg' to='../about-us' caption=\"This is a simple caption\" style={{border: \"20px solid orange\"}}/>\n```\n<RSStaticImage src='/images/demoStatic.jpg' to='../about-us' caption=\"This is a simple caption\" style={{border: \"20px solid orange\"}}/>\n\n- **No Wrapping (advanced mode)**: You can add a `noWrap` attribute to remove all the fitting, centering and img wrapping. If you use this you will be left with the equivalent of a single unwrapped `<img />` tag. As you can see though, this is not necessarily going to play nice with our theme. ***NOTE: IF YOU USE NOWRAP IT WILL IGNORE THE `caption` ATTRIBUTE.***\n\n\n```typescript\n<RSStaticImage src='/images/demoStatic.jpg' to='../about-us' noWrap />\n```\n<RSStaticImage src='/images/demoStatic.jpg' to='../about-us' noWrap />\n\n\n- **Float**: You can add a `float` attribute to float the image to the `left` or `right`. This is useful for text wrapping. \n    - ***NOTE: Float is ignored if `noWrap` is used***\n    - Floats are sometimes hard to work with and can be unpredictable. Headers (i.e. `#`, `##`, `###`), Dividers (`---`), and lists (`*`, `1.`, `-`) will clear the float.\n    - Floats will revert to full width on mobile screens.\n\n```typescript\n<RSStaticImage src='https://placekitten.com/200/300' to=\"https://google.com\" float=\"left\" caption=\"kitten pic\" />\nVelit nulla exercitation consectetur laborum elit magna ea non consectetur magna. Fugiat amet est voluptate consequat est commodo irure reprehenderit tempor pariatur adipisicing consequat aliquip. Labore proident veniam nulla officia dolor do. Nostrud adipisicing nisi aliquip magna sit aute velit labore nulla culpa cillum ex.\n```\n<RSStaticImage src='https://placekitten.com/200/300' to=\"https://google.com\" float=\"left\" caption=\"kitten pic\" />\nVelit nulla exercitation consectetur laborum elit magna ea non consectetur magna. Fugiat amet est voluptate consequat est commodo irure reprehenderit tempor pariatur adipisicing consequat aliquip. Labore proident veniam nulla officia dolor do. Nostrud adipisicing nisi aliquip magna sit aute velit labore nulla culpa cillum ex.\n\n-------------\n\n#### Caveats and notes:\n\n- `<img />` doesn't work for this method either.\n\n## 2. Relative to the `.mdx` file\n\nUsing a relative path to navigate relative to the mdx file (Note the dot slash `./` which means relative to the current path)\n\n\n```html\n![DemoStatic](./demoRelative.jpg)\n```\n![DemoStatic](./demoRelative.jpg)\n\n#### Caveats and notes:\n\n- `<RSStaticImage />` doesn't work with relative image paths.\n- `<img />` doesn't work for this method either.\n\n\n### 3. External Images\n\nYou can just use Markdown's Markdown/Remark syntax for external images:\n\n```markdown\n![Kitten](https://placekitten.com/200/300)\n```\n![Kitten](https://placekitten.com/200/300)\n\n\nOr if you need a bit more control you can use the `<RSStaticImage />` HTML syntax. You can use it the same as an `<img />` tag with all the same attributes.\n\n```typescript\n<RSStaticImage src='https://placekitten.com/200/300' to=\"https://google.com\" style={{opacity: 0.2, border: \"20px solid orange\"}} />\n```\n<RSStaticImage src='https://placekitten.com/200/300' to=\"https://google.com\" style={{opacity: 0.2, border: \"20px solid orange\"}} />\n\n\n#### Caveats and notes:\n\n- DO NOT USE `<img />` for this method either.\n\n\n-------------------\n\n# Markdown StyleGuide\n\n```markdown\n## Headers\n\n# H1 Header\n\n## H2 Header\n\n### H3 Header\n\n#### H4 Header\n\n##### H5 Header\n\n###### H6 Header\n\n> Blockquote Et ullamco dolor anim magna dolor aliquip enim consequat ut minim aliqua ea.\n\nParagraph1 Veniam est commodo sit cillum anim ipsum velit culpa id veniam. Sint aute dolor excepteur eu commodo minim reprehenderit amet reprehenderit esse ea. Eu Lorem consectetur sint id aute ex cillum aliqua laborum aute deserunt ipsum. Deserunt ullamco Lorem deserunt commodo consequat magna ea id.\n\nParagraph2 In amet excepteur non labore anim pariatur nostrud ad consequat quis nostrud ea ullamco occaecat. Ad mollit cillum occaecat est laborum eu. Nostrud quis officia cillum qui proident aliqua deserunt voluptate culpa ad dolor irure cupidatat esse. Qui nulla duis esse velit. Reprehenderit laboris labore ea do minim anim aliqua elit occaecat voluptate duis excepteur dolore est.\n\nParagraph3 Elit labore aliquip exercitation dolor voluptate reprehenderit occaecat esse Lorem consectetur ad. Occaecat non esse velit in. Qui aute eu elit consectetur duis anim sunt cupidatat. Elit aliquip dolor ex commodo anim. Nulla Lorem sit et aute velit officia aute adipisicing. Adipisicing esse eiusmod nulla elit exercitation laborum. Consectetur cillum sint adipisicing laborum ex aute et dolor labore amet in in dolore.\n\n* List item 1\n* List item 2\n\n1. List item 1\n1. List item 2\n\n| Header 1 | Header2  | Header 3   |\n|--------------|------|---|\n|Row1 Column1 | Row1 Column2 | Row1 Column3 |\n|Row2 Column1 | Row2 Column2 | Row2 Column3 |\n|Row3 Column1 | Row3 Column2 | Row3 Column3 |\n|Row4 Column1 | Row4 Column2 | Row4 Column3 |\n```\n\n\n## Headers\n\n# H1 Header\n\n## H2 Header\n\n### H3 Header\n\n#### H4 Header\n\n##### H5 Header\n\n###### H6 Header\n\n> Blockquote Et ullamco dolor anim magna dolor aliquip enim consequat ut minim aliqua ea.\n\nParagraph1 Veniam est commodo sit cillum anim ipsum velit culpa id veniam. Sint aute dolor excepteur eu commodo minim reprehenderit amet reprehenderit esse ea. Eu Lorem consectetur sint id aute ex cillum aliqua laborum aute deserunt ipsum. Deserunt ullamco Lorem deserunt commodo consequat magna ea id.\n\nParagraph2 In amet excepteur non labore anim pariatur nostrud ad consequat quis nostrud ea ullamco occaecat. Ad mollit cillum occaecat est laborum eu. Nostrud quis officia cillum qui proident aliqua deserunt voluptate culpa ad dolor irure cupidatat esse. Qui nulla duis esse velit. Reprehenderit laboris labore ea do minim anim aliqua elit occaecat voluptate duis excepteur dolore est.\n\nParagraph3 Elit labore aliquip exercitation dolor voluptate reprehenderit occaecat esse Lorem consectetur ad. Occaecat non esse velit in. Qui aute eu elit consectetur duis anim sunt cupidatat. Elit aliquip dolor ex commodo anim. Nulla Lorem sit et aute velit officia aute adipisicing. Adipisicing esse eiusmod nulla elit exercitation laborum. Consectetur cillum sint adipisicing laborum ex aute et dolor labore amet in in dolore.\n\n* List item 1\n* List item 2\n\n1. List item 1\n1. List item 2\n\n| Header 1 | Header2  | Header 3   |\n|--------------|------|---|\n|Row1 Column1 | Row1 Column2 | Row1 Column3 |\n|Row2 Column1 | Row2 Column2 | Row2 Column3 |\n|Row3 Column1 | Row3 Column2 | Row3 Column3 |\n|Row4 Column1 | Row4 Column2 | Row4 Column3 |\n\n----------------\n\n## Youtube embeds\n\nWe have a custom component for youtube embedding. There is an optional `caption` attribute that will add a caption to the video.\n\n```tsx\n<Youtube embedId=\"1hPxGmTGarM\" caption=\"This is a simple caption\" />\n```\n\n<Youtube embedId=\"1hPxGmTGarM\" caption=\"This is a simple caption\"/>\n\n\nYou can also embed using the `<iframe />` from youtube but it's not as nice AND you should rename the attributes to be camelCase from `frameborder` to `frameBorder` and `allowfullscreen` to `allowFullScreen` or you get browser console warnings:\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/1hPxGmTGarM?si=fj1mSgn4toCCv5vY\" title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n\n----------------\n\n## Code Blocks\n\nIn order to get good syntax highlighting you need to use the markdown code block syntax.\n\n```text\nNOTE: the single quotes below SHOULD BE backticks. They are not single quotes.\nI just can't use backticks in markdown because it will think I'm trying to\nput a code block inside a code block.\n\n'''languagename\n<CODE HERE>\n'''\n```\n\n### Javascript example\n\n```javascript\n#!/usr/bin/env node\nconst foo = 'bar'\n\nfunction baz() {\n  return foo\n}\n```\n\n### Python example\n\n```python\n#!/usr/bin/env python3\na = 1\nb = 2\n\ndef add(a, b):\n  return a + b\n\n```\n\n----------------\n\n# Advanced\n\n## Material UI (MUI)\n\n[MUI Core](https://mui.com/material-ui/getting-started/) is a ReactJS implementation of Google's Material Design. It's a very powerful library and we use it extensively. It's also very well documented. You can find a lot of information [on their site](https://mui.com/material-ui/getting-started/).\n\n\n* Do not use the `<Container />` anywhere unless the `isHome: true` frontmatter is set or it will fight with the site's template and responsiveness.\n\n## Stack\n\n`<Stack />` This is [Mui's Stack component](https://mui.com/material-ui/react-stack/). Use it to space things evenly either as a row or a column. This is preferable to `<Grid />` for simple layouts.\n\n#### Vertical Stack\n\n```jsx\n<Stack spacing={2} border=\"2px solid red\">\n  <Box to=''>Thing 1</Box>\n  <Box to=''>Thing 2</Box>\n  <Box to=''>Thing 3</Box>\n</Stack>\n```\n\n<Stack spacing={2} border=\"2px solid red\">\n  <Box to=''>Thing 1</Box>\n  <Box to=''>Thing 2</Box>\n  <Box to=''>Thing 3</Box>\n</Stack>\n\n#### Horizontal Stack\n\n```jsx\n<Stack spacing={2} border=\"2px solid red\" direction=\"row\" justifyContent=\"center\">\n  <Box to=''>Thing 1</Box>\n  <Box to=''>Thing 2</Box>\n  <Box to=''>Thing 3</Box>\n</Stack>\n```\n\n<Stack spacing={2} border=\"2px solid red\" direction=\"row\" justifyContent=\"center\">\n  <Box to=''>Thing 1</Box>\n  <Box to=''>Thing 2</Box>\n  <Box to=''>Thing 3</Box>\n</Stack>\n\n## Grids\n\nGrids are useful for more complex layouts. They are not responsive by default so you need to use the `xs`, `sm`, `md`, `lg`, and `xl` props to make them responsive. You can also use the `spacing` prop to add space between the grid items. More information can be found [here](https://mui.com/components/grid/).\n\n\n***NOTE: Always try using `<Stack />` before using `<Grid />`. It's much easier to use and is responsive by default.***\n\n```jsx\n<Grid container border=\"1px solid red\">\n  <Grid item xs={12} md={2} border=\"1px solid blue\">Row1-Thing1</Grid>\n  <Grid item xs={12} md={6} border=\"1px solid green\">Row1-Thing2</Grid>\n  <Grid item xs={12} md={4} border=\"1px solid yellow\">Row1-Thing3</Grid>\n\n  <Grid item xs={12} md={4} border=\"1px solid blue\">Row2-Thing1</Grid>\n  <Grid item xs={12} md={6} border=\"1px solid green\">Row2-Thing2</Grid>\n  <Grid item xs={12} md={2} border=\"1px solid yellow\">Row2-Thing3</Grid>\n</Grid>\n```\n\n<Grid container border=\"1px solid red\">\n  <Grid item xs={12} md={2} border=\"1px solid blue\">Row1-Thing1</Grid>\n  <Grid item xs={12} md={6} border=\"1px solid green\">Row1-Thing2</Grid>\n  <Grid item xs={12} md={4} border=\"1px solid yellow\">Row1-Thing3</Grid>\n\n  <Grid item xs={12} md={4} border=\"1px solid blue\">Row2-Thing1</Grid>\n  <Grid item xs={12} md={6} border=\"1px solid green\">Row2-Thing2</Grid>\n  <Grid item xs={12} md={2} border=\"1px solid yellow\">Row2-Thing3</Grid>\n</Grid>\n\n## Alert\n\nAlert is a component that draws attention to something. It's useful for announcements or warnings. You can find more information [here](https://mui.com/components/alert/).\n\n```jsx\n<Alert severity=\"info\">\n  This is an info alert â€” <strong>check it out!</strong>\n</Alert>\n```\n<Alert severity=\"info\">\n  This is an info alert â€” <strong>check it out!</strong>\n</Alert>\n\n```jsx\n<Alert severity=\"warning\">\n  This is an info alert â€” <strong>check it out!</strong>\n</Alert>\n```\n\n<Alert severity=\"warning\">\n  This is an info alert â€” <strong>check it out!</strong>\n</Alert>\n\n```jsx\n<Alert severity=\"error\">\n  This is an info alert â€” <strong>check it out!</strong>\n</Alert>\n```\n\n<Alert severity=\"error\">\n  This is an info alert â€” <strong>check it out!</strong>\n</Alert>\n\n```jsx\n<Alert severity=\"success\">\n  This is an info alert â€” <strong>check it out!</strong>\n</Alert>\n```\n\n<Alert severity=\"success\">\n  This is an info alert â€” <strong>check it out!</strong>\n</Alert>","frontmatter":{"title":"Demo & Styleguide","date":null,"description":"Demo Page where you can see how to do things","banner":true,"isHome":null},"tableOfContents":{"items":[{"url":"#gatsby-special-markdown-syntaxs","title":"Gatsby special markdown syntaxs","items":[{"url":"#baked-in-components","title":"Baked-in Components","items":[{"url":"#custom-homepage-components","title":"Custom Homepage Components:"},{"url":"#custom-components-for-buttons-and-links","title":"Custom Components for buttons and links:"},{"url":"#material-ui-components-exposed-by-default","title":"Material UI Components exposed by default:"}]},{"url":"#import-other-mui-components-sparingly","title":"Import other MUI Components (sparingly)"},{"url":"#use-mui-icons","title":"Use MUI Icons"},{"url":"#dont-use-html-tags","title":"Don't Use HTML tags"},{"url":"#links","title":"Links","items":[{"url":"#internal-links","title":"Internal Links"},{"url":"#relative-internal-links","title":"Relative Internal Links"},{"url":"#absolute-internal-links","title":"Absolute Internal Links"},{"url":"#external-links","title":"External Links"}]},{"url":"#buttons","title":"Buttons","items":[{"url":"#internal-links-button","title":"Internal Links Button"},{"url":"#external-link-button","title":"External Link Button"}]}]},{"url":"#images","title":"Images","items":[{"url":"#1-in-the-static-folder-prefered-method","title":"1. In the static folder (Prefered Method)"},{"url":"#2-relative-to-the-mdx-file","title":"2. Relative to the .mdx file","items":[{"url":"#3-external-images","title":"3. External Images"}]}]},{"url":"#markdown-styleguide","title":"Markdown StyleGuide","items":[{"url":"#headers","title":"Headers"}]},{"url":"#h1-header","title":"H1 Header","items":[{"url":"#h2-header","title":"H2 Header","items":[{"url":"#h3-header","title":"H3 Header"}]},{"url":"#youtube-embeds","title":"Youtube embeds"},{"url":"#code-blocks","title":"Code Blocks","items":[{"url":"#javascript-example","title":"Javascript example"},{"url":"#python-example","title":"Python example"}]}]},{"url":"#advanced","title":"Advanced","items":[{"url":"#material-ui-mui","title":"Material UI (MUI)"},{"url":"#stack","title":"Stack"},{"url":"#grids","title":"Grids"},{"url":"#alert","title":"Alert"}]}]}},"allMdx":{"nodes":[]}},"pageContext":{"id":"1d6a3015-5cbf-504f-afce-9ae95f7c3e83","frontmatter":{"title":"Demo & Styleguide","description":"Demo Page where you can see how to do things","banner":true}}},"staticQueryHashes":["1410704205","2489078201","2841359383"],"slicesMap":{}}